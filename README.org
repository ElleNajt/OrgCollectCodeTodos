* org-collect-code-todos

Written almost entirely by Claude 3.7 using aider.

An Emacs package that automatically collects TODO comments from your code files into a centralized Org mode file.

** Overview

`org-collect-code-todos` scans your code files for TODO comments and maintains a centralized Org mode file where you can track and manage them. When you mark a TODO as DONE in the Org file, it updates the corresponding comment in the source code.

** Features

- **Automatic Collection**: Scans code files for TODO comments when you save them
- **UUID Tracking**: Uses unique IDs to maintain the connection between TODOs in code and Org entries
- **Read-Only Protection**: Prevents edits to the Org file while allowing TODO state changes and archiving. This is to ensure there is a single source of truth.
- **Automatic Archiving**: Archives TODOs in the Org file when they're deleted from the source code
- **Supports Multiple Languages**: Works with any programming language that uses standard comment syntax

** Configuration

#+begin_src emacs-lisp :tangle yes

;; Set the path for your code TODOs file (default is ~/code-todos.org)
(setq org-collect-code-todos-file "~/my-todos.org")

;; Set the key for toggling TODO state in source code

(map! :after org-collect-code-todos
      :map prog-mode-map
      :n "RET" #'org-collect-code-todos-toggle-state-at-point)
#+end_src


** Usage

1. Add TODOs to your code as comments:
   ```python
   # TODO This needs optimization
   ```

2. Save the file, and the TODO will be collected into your org-collect-code-todos file.

This will only detected TODO's that appear after some number of comment characters, followed by whitespace.

3. In the Org file, you can:
   - Mark TODOs as DONE (which updates the source code)
   - Archive completed TODOs
   - Add notes or subtasks

4. When you mark a TODO as DONE in the Org file, the corresponding comment in your code will be updated:
   ```python
   # DONE This needs optimization
   ```

5. You can also toggle TODO/DONE state directly in your source code:
   - Place your cursor on a TODO line
   - Press Enter (or your configured key)
   - The state will toggle between TODO and DONE
   - The change will be synchronized with the org file
   
6. The org file is kept read only, to prevent synchronization issues.

** How It Works

The package uses hooks to:
1. Scan files on save for TODOs inside of comments.
2. Add unique IDs to TODOs in your code: `TODO[a1b2c3d4] Fix this later`
3. Create corresponding entries in your Org file
4. Archive entries in the Org file when the corresponding TODO is deleted from the source code
5. Update the source code when you change TODO states in the Org file

** License

This project is licensed under the MIT License - see the LICENSE file for details.

* Improvements

*** TODO Find some way to use overlays and indirect buffers to make the org todo simultaneously editable with the code.
